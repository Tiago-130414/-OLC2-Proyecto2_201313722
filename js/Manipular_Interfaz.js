function traducir() {
  var texto = Codigo.getValue();
  var tr = DesanidarFuncion.parse(texto);
  if (tr.errores.length > 0) {
    erroresCI = erroresCI.concat(tr.errores);
  }
  generarIntermedio(tr.traduccion);
  //luego de generar el codigo valido se reportan los errores
  if (erroresCI.length > 0) {
    generarTablasErrores(erroresCI, "Codigo Intermedio");
    erroresCI = [];
  }
  alert("Traduccion Completa");
}

function limpiarTxt() {
  Codigo.setValue("");
  TraduccionTP.setValue("");
}

function encabezado(contenido) {
  var encabezado = "";
  encabezado += "#include <stdio.h>\n";
  encabezado += "#include <math.h>\n";
  encabezado += "double heap[16384];\n";
  encabezado += "double stack[16384];\n";
  encabezado += generarTemporalesEncabezado() + "\n";
  encabezado += "int h = 0, s = 0;\n";
  encabezado += "/******************************************************/\n";
  encabezado += "//////////////////POTENCIA///////////////////\n";
  encabezado += "float m0, m1, m2, m3, m4;\n";
  encabezado += "float m5 = 1, m22; //m22 resultado potencia\n";
  encabezado += "/******************************************************/\n";
  encabezado += "//////////////////IMPRIMIR CADENA///////////////////\n";
  encabezado += "double m6;\n";
  encabezado +=
    "int m7 = 0, m8 = 0, m9 = 0; //m6 = parametro, m7 = inicio , m8 = fin , m9 = aux for\n";
  encabezado += "/******************************************************/\n";
  encabezado += "//////////////////CONCATENAR NUMEROS///////////////////\n";
  encabezado += "double m10; //parametro\n";
  encabezado += "double m13, m18;\n";
  encabezado += "int m11, m16;\n";
  encabezado += "long m12, m14, m15, m17, m19;\n";
  encabezado += "int m20, m21;\n";
  encabezado += "/******************************************************/\n";
  encabezado += "//////////////////CONCATENAR BOOLEANOS//////////////////\n";
  encabezado += "double m23; // parametro concatenar booleanos\n";
  encabezado += "/******************************************************/\n";
  encabezado += "//////////////////CONCATENAR CADENA///////////////////\n";
  encabezado += "double m24; //parametro\n";
  encabezado += "int m26;\n";
  encabezado += "int m27;\n";
  encabezado += "double m28;\n";
  encabezado += "/******************************************************/\n";
  encabezado += "///////////////////// TO LOWER CASE ///////////////////\n";
  encabezado += "double m29; // parametro\n";
  encabezado += "int m30;    //inicio\n";
  encabezado += "int m31;    //fin\n";
  encabezado += "int m32;    //aux\n";
  encabezado += "double m33; //resultado\n";
  encabezado += "/******************************************************/\n";
  encabezado += "///////////////////////// NULL ///////////////////////\n";
  encabezado += "double m34;\n";
  encabezado += "/******************************************************/\n";
  encabezado += "///////////////////// TO UPPER CASE ///////////////////\n";
  encabezado += "double m35; //parametro\n";
  encabezado += "int m36;    //inicio\n";
  encabezado += "int m37;    //fin\n";
  encabezado += "int m38;    //aux\n";
  encabezado += "double m39; //resultado\n";
  encabezado += "/******************************************************/\n";
  encabezado += "///////////////////////// LENGTH ///////////////////////\n";
  encabezado += "double m40; //parametro\n";
  encabezado += "int m41;    //inicio\n";
  encabezado += "int m42;    //fin\n";
  encabezado += "int m43;    //resultado\n";
  encabezado += "/******************************************************/\n";
  encabezado += "///////////////////////// CHARAT ///////////////////////\n";
  encabezado += "double m44; // encabezado\n";
  encabezado += "int m45;    //indice\n";
  encabezado += "int m46;    // inicio\n";
  encabezado += "int m47;    //tama�o\n";
  encabezado += "int m48;    //aux\n";
  encabezado += "double m49; //valor\n";
  encabezado += "double m50; //retorno\n";
  encabezado += "/******************************************************/\n";
  encabezado += "///////////////////////// OBTOBJ ///////////////////////\n";
  encabezado += "double m51; // encabezado\n";
  encabezado += "int m52;    //indice\n";
  encabezado += "int m53;    // inicio\n";
  encabezado += "int m54;    //tama�o\n";
  encabezado += "int m55;    //aux\n";
  encabezado += "double m56; //retorno\n";
  encabezado += "/******************************************************/\n";
  encabezado += "void rNull()\n";
  encabezado += "{\n";
  encabezado += "    m34 = h;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 110;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 117;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 108;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 108;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[(int)m34] = h - m34;\n";
  encabezado += "}\n";
  encabezado += "void pot()\n";
  encabezado += "{\n";
  encabezado += "    m5 = 1;\n";
  encabezado += "    m2 = m1;\n";
  encabezado += "    m3 = m0 >= 0;\n";
  encabezado += "    m4 = m1 >= 0;\n";
  encabezado += "    if (m3 && m4)\n";
  encabezado += "        goto n0;\n";
  encabezado += "    goto n7;\n";
  encabezado += "n0:\n";
  encabezado += "    if (m0 == 0)\n";
  encabezado += "        goto n1;\n";
  encabezado += "    goto n2;\n";
  encabezado += "n1:\n";
  encabezado += "    m22 = 1;\n";
  encabezado += "    return;\n";
  encabezado += "n2:\n";
  encabezado += "    if (m0 == 1)\n";
  encabezado += "        goto n3;\n";
  encabezado += "    goto n4;\n";
  encabezado += "n3:\n";
  encabezado += "    m22 = m2;\n";
  encabezado += "    return;\n";
  encabezado += "n4:\n";
  encabezado += "    if (m5 < m0)\n";
  encabezado += "        goto n5;\n";
  encabezado += "    goto n6;\n";
  encabezado += "n5:\n";
  encabezado += "    m2 = m2 * m1;\n";
  encabezado += "    m5 = m5 + 1;\n";
  encabezado += "    goto n4;\n";
  encabezado += "n6:\n";
  encabezado += "    m22 = m2;\n";
  encabezado += "    return;\n";
  encabezado += "n7:\n";
  encabezado += "    m22 = 0;\n";
  encabezado += "    return;\n";
  encabezado += "}\n";
  encabezado += "void impCad()\n";
  encabezado += "{\n";
  encabezado += "    if (m6 != -1)\n";
  encabezado += "        goto n63;\n";
  encabezado += "    goto n64;\n";
  encabezado += "n63:\n";
  encabezado += "    m7 = m6 + 1;\n";
  encabezado += "    m8 = heap[(int)m6] + m6;\n";
  encabezado += "    m9 = m7;\n";
  encabezado += "n8:\n";
  encabezado += "    if (m9 < m8)\n";
  encabezado += "        goto n9;\n";
  encabezado += "    return;\n";
  encabezado += "n9:\n";
  encabezado += '    printf("%c", (char)heap[m9]);\n';
  encabezado += "    m9 = m9 + 1;\n";
  encabezado += "    goto n8;\n";
  encabezado += "n64:\n";
  encabezado += "    m34 = m6;\n";
  encabezado += "    rNull();\n";
  encabezado += "    m6 = m34;\n";
  encabezado += "    impCad();\n";
  encabezado += "}\n";
  encabezado += "void cNum()\n";
  encabezado += "{\n";
  encabezado += "    m11 = 0;\n";
  encabezado += "    m12 = 0;\n";
  encabezado += "    m13 = 0;\n";
  encabezado += "    if (m10 < 0)\n";
  encabezado += "        goto n10;\n";
  encabezado += "    goto n11;\n";
  encabezado += "n10:\n";
  encabezado += "    heap[h] = 45;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    m10 = m10 * -1;\n";
  encabezado += "n11:\n";
  encabezado += "    m12 = m10;\n";
  encabezado += "    m13 = m10 - m12;\n";
  encabezado += "    m14 = 0, m15 = 1;\n";
  encabezado += "n12:\n";
  encabezado += "    m14 = m10 / m15;\n";
  encabezado += "n13:\n";
  encabezado += "    if (m14 <= 0)\n";
  encabezado += "        goto n15;\n";
  encabezado += "    goto n14;\n";
  encabezado += "n14:\n";
  encabezado += "    m15 = m15 * 10;\n";
  encabezado += "    m11 = m11 + 1;\n";
  encabezado += "    goto n12;\n";
  encabezado += "n15:\n";
  encabezado += "    m15 = m15 / 10;\n";
  encabezado += "    m16 = m11;\n";
  encabezado += "    m17 = 0;\n";
  encabezado += "    m18 = 0;\n";
  encabezado += "    m14 = m12;\n";
  encabezado += "    if (m11 == 0)\n";
  encabezado += "        goto n16;\n";
  encabezado += "    goto n17;\n";
  encabezado += "n16:\n";
  encabezado += "    heap[h] = m14 + 48;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "n17:\n";
  encabezado += "    if (m16 > 0)\n";
  encabezado += "        goto n18;\n";
  encabezado += "    goto n19;\n";
  encabezado += "n18:\n";
  encabezado += "    m17 = m14;\n";
  encabezado += "    m14 = m14 / m15;\n";
  encabezado += "    heap[h] = m14 + 48;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    m18 = m14 * m15;\n";
  encabezado += "    m14 = m17 - m18;\n";
  encabezado += "    m15 = m15 / 10;\n";
  encabezado += "    m16 = m16 - 1;\n";
  encabezado += "    goto n17;\n";
  encabezado += "n19:\n";
  encabezado += "    if (m13 > 0)\n";
  encabezado += "        goto n20;\n";
  encabezado += "    goto n36;\n";
  encabezado += "n20:\n";
  encabezado += "    m13 = m13 + 1;\n";
  encabezado += "    m10 = m13 * 10000000;\n";
  encabezado += "    m14 = m10;\n";
  encabezado += "    goto n21;\n";
  encabezado += "n21:\n";
  encabezado += "    m17 = m14;\n";
  encabezado += "    m14 = m14 / 10;\n";
  encabezado += "    m14 = m14 * 10;\n";
  encabezado += "n22:\n";
  encabezado += "    if (m17 != m14)\n";
  encabezado += "        goto n23;\n";
  encabezado += "    goto n24;\n";
  encabezado += "n23:\n";
  encabezado += "    m10 = m17;\n";
  encabezado += "    goto n26;\n";
  encabezado += "n24:\n";
  encabezado += "    m14 = m14 / 10;\n";
  encabezado += "n25:\n";
  encabezado += "    goto n21;\n";
  encabezado += "n26:\n";
  encabezado += "    heap[h] = 46;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    m14 = 0;\n";
  encabezado += "    m15 = 1;\n";
  encabezado += "    m19 = 0;\n";
  encabezado += "n27:\n";
  encabezado += "    m14 = m10 / m15;\n";
  encabezado += "    if (m14 <= 0)\n";
  encabezado += "        goto n30;\n";
  encabezado += "    goto n28;\n";
  encabezado += "n28:\n";
  encabezado += "    m15 = m15 * 10;\n";
  encabezado += "    m19 = m19 + 1;\n";
  encabezado += "    m11 = m11 + 1;\n";
  encabezado += "    m20 = m11 < 14;\n";
  encabezado += "    m21 = m19 < 9;\n";
  encabezado += "n29:\n";
  encabezado += "    if (m20 && m21)\n";
  encabezado += "        goto n27;\n";
  encabezado += "    goto n30;\n";
  encabezado += "n30:\n";
  encabezado += "    m15 = m15 / 10;\n";
  encabezado += "    m16 = m19;\n";
  encabezado += "    m17 = 0;\n";
  encabezado += "    m18 = 0;\n";
  encabezado += "    m14 = m10;\n";
  encabezado += "n31:\n";
  encabezado += "    if (m16 > 0)\n";
  encabezado += "        goto n32;\n";
  encabezado += "    goto n36;\n";
  encabezado += "n32:\n";
  encabezado += "    m17 = m14;\n";
  encabezado += "    m14 = m14 / m15;\n";
  encabezado += "n33:\n";
  encabezado += "    if (m16 != m19)\n";
  encabezado += "        goto n34;\n";
  encabezado += "    goto n35;\n";
  encabezado += "n34:\n";
  encabezado += "    heap[h] = m14 + 48;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "n35:\n";
  encabezado += "    m18 = m14 * m15;\n";
  encabezado += "    m14 = m17 - m18;\n";
  encabezado += "    m15 = m15 / 10;\n";
  encabezado += "    m16 = m16 - 1;\n";
  encabezado += "    goto n31;\n";
  encabezado += "n36:\n";
  encabezado += "    return;\n";
  encabezado += "}\n";
  encabezado += "void cBool()\n";
  encabezado += "{\n";
  encabezado += "    if (m23 == 1)\n";
  encabezado += "        goto n37;\n";
  encabezado += "    goto n38;\n";
  encabezado += "n37:\n";
  encabezado += "    heap[h] = 116;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 114;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 117;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 101;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    return;\n";
  encabezado += "n38:\n";
  encabezado += "    heap[h] = 102;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 97;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 108;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 115;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = 101;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    return;\n";
  encabezado += "}\n";
  encabezado += "void cC()\n";
  encabezado += "{\n";
  encabezado += "    m26 = m24 + 1;\n";
  encabezado += "    m27 = heap[(int)m24] + m24;\n";
  encabezado += "n39:\n";
  encabezado += "    if (m26 < m27)\n";
  encabezado += "        goto n40;\n";
  encabezado += "    goto n41;\n";
  encabezado += "n40:\n";
  encabezado += "    m28 = heap[m26];\n";
  encabezado += "    heap[h] = m28;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    m26++;\n";
  encabezado += "    goto n39;\n";
  encabezado += "n41:\n";
  encabezado += "    return;\n";
  encabezado += "}\n";
  encabezado += "void toLowerCase()\n";
  encabezado += "{\n";
  encabezado += "    m30 = m29 + 1;\n";
  encabezado += "    m31 = heap[(int)m29] + m29;\n";
  encabezado += "    if (m29 != -1)\n";
  encabezado += "        goto n42;\n";
  encabezado += "    goto n43;\n";
  encabezado += "n42:\n";
  encabezado += "n44:\n";
  encabezado += "    if (m30 < m31)\n";
  encabezado += "        goto n45;\n";
  encabezado += "    goto n46;\n";
  encabezado += "n45:\n";
  encabezado += "    m32 = (int)heap[m30];\n";
  encabezado += "    if (m32 > 64.0)\n";
  encabezado += "        goto n47;\n";
  encabezado += "    goto n48;\n";
  encabezado += "n47:\n";
  encabezado += "    if (m32 < 91.0)\n";
  encabezado += "        goto n49;\n";
  encabezado += "    goto n50;\n";
  encabezado += "n49:\n";
  encabezado += "    heap[m30] = m32 + 32;\n";
  encabezado += "n48:\n";
  encabezado += "n50:\n";
  encabezado += "    m30++;\n";
  encabezado += "    goto n44;\n";
  encabezado += "n46:\n";
  encabezado += "    goto n51;\n";
  encabezado += "n43:\n";
  encabezado += "    m34 = m29;\n";
  encabezado += "    rNull();\n";
  encabezado += "    m33 = m34;\n";
  encabezado += "    return;\n";
  encabezado += "n51:\n";
  encabezado += "    m33 = m29;\n";
  encabezado += "}\n";
  encabezado += "double toUpperCase()\n";
  encabezado += "{\n";
  encabezado += "    m36 = m35 + 1;\n";
  encabezado += "    m37 = heap[(int)m35] + m35;\n";
  encabezado += "    if (m35 != -1)\n";
  encabezado += "        goto n52;\n";
  encabezado += "    goto n53;\n";
  encabezado += "n52:\n";
  encabezado += "n54:\n";
  encabezado += "    if (m36 < m37)\n";
  encabezado += "        goto n55;\n";
  encabezado += "    goto n56;\n";
  encabezado += "n55:\n";
  encabezado += "    m38 = (int)heap[m36];\n";
  encabezado += "    if (m38 > 96.0)\n";
  encabezado += "        goto n57;\n";
  encabezado += "    goto n58;\n";
  encabezado += "n57:\n";
  encabezado += "    if (m38 < 123.0)\n";
  encabezado += "        goto n59;\n";
  encabezado += "    goto n60;\n";
  encabezado += "n59:\n";
  encabezado += "    heap[m36] = m38 - 32;\n";
  encabezado += "n58:\n";
  encabezado += "n60:\n";
  encabezado += "    m36++;\n";
  encabezado += "    goto n54;\n";
  encabezado += "n56:\n";
  encabezado += "    m39 = m35;\n";
  encabezado += "    return;\n";
  encabezado += "n53:\n";
  encabezado += "    m34 = m35;\n";
  encabezado += "    rNull();\n";
  encabezado += "    m39 = m34;\n";
  encabezado += "    return;\n";
  encabezado += "}\n";
  encabezado += "void length()\n";
  encabezado += "{\n";
  encabezado += "    m41 = 0;\n";
  encabezado += "    m42 = 0;\n";
  encabezado += "    m43 = 0;\n";
  encabezado += "    if (m40 != -1)\n";
  encabezado += "        goto n61;\n";
  encabezado += "    goto n62;\n";
  encabezado += "n61:\n";
  encabezado += "    m41 = m40 + 1;\n";
  encabezado += "    m42 = heap[(int)m40] + m40;\n";
  encabezado += "    m43 = m42 - m41;\n";
  encabezado += "    return;\n";
  encabezado += "n62:\n";
  encabezado += "    return;\n";
  encabezado += "}\n";
  encabezado += "void charAt()\n";
  encabezado += "{\n";
  encabezado += "    m46 = m44 + 1;\n";
  encabezado += "    m47 = heap[(int)m44] - 1;\n";
  encabezado += "    m48 = 0;\n";
  encabezado += "    if (m44 != -1)\n";
  encabezado += "        goto n65;\n";
  encabezado += "    goto n66;\n";
  encabezado += "n65:\n";
  encabezado += "    if (m45 >= 0.0)\n";
  encabezado += "        goto n67;\n";
  encabezado += "    goto n68;\n";
  encabezado += "n67:\n";
  encabezado += "    if (m45 < m47)\n";
  encabezado += "        goto n69;\n";
  encabezado += "    goto n70;\n";
  encabezado += "n69:\n";
  encabezado += "    m48 = m46 + m45;\n";
  encabezado += "    m49 = heap[m48];\n";
  encabezado += "    m50 = h;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[h] = m49;\n";
  encabezado += "    h = h + 1;\n";
  encabezado += "    heap[(int)m50] = h - m50;\n";
  encabezado += "    return;\n";
  encabezado += "n68:\n";
  encabezado += "n70:\n";
  encabezado += "n66:\n";
  encabezado += "    m34 = m50;\n";
  encabezado += "    rNull();\n";
  encabezado += "    m50 = m34;\n";
  encabezado += "}\n\n";
  encabezado += "void obtenerObj()\n";
  encabezado += "{\n";
  encabezado += "    m53 = m51 + 1;\n";
  encabezado += "    m54 = heap[(int)m51] - 1;\n";
  encabezado += "    m55 = 0;\n";
  encabezado += "    m56 = 0;\n";
  encabezado += "    if (m52 >= 0.0)\n";
  encabezado += "        goto n72;\n";
  encabezado += "    goto n73;\n";
  encabezado += "n72:\n";
  encabezado += "    if (m52 < m54)\n";
  encabezado += "        goto n74;\n";
  encabezado += "    goto n75;\n";
  encabezado += "n74:\n";
  encabezado += "    m55 = m53 + m52;\n";
  encabezado += "    m56 = heap[m55];\n";
  encabezado += "    goto n71;\n";
  encabezado += "n73:\n";
  encabezado += "n75:\n";
  encabezado += "n71:\n";
  encabezado += "    return;\n";
  encabezado += "}\n\n";
  encabezado += "int main()\n";
  encabezado += "{\n";
  encabezado += contenido + "\n";
  encabezado += "    return 0;\n";
  encabezado += "}\n";

  return encabezado;
}

function generarTemporalesEncabezado() {
  var lt = "double ";
  var cont = 0;
  var aux = 0;
  for (var i = 0; i < temporal; i++) {
    lt += "T" + i + "= 0";
    if (cont != temporal - 1 && aux != 10) {
      lt += ",";
    } else if (cont == temporal - 1) {
      lt += ";\n";
    } else if (cont < temporal && aux == 10) {
      lt += ";\ndouble ";
      aux = 0;
    }
    aux++;
    cont++;
  }
  return lt;
}

function insertarEncabezado() {
  var texto = TraduccionTP.getValue();
  var txt = encabezado(texto);
  //console.log(txt);
  TraduccionTP.setValue(txt);
}
